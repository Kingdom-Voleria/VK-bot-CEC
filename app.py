import os
import threading
import time
from flask import Flask, jsonify
import logging

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –ª–æ–≥–∏–∫—É –±–æ—Ç–∞
from main import main as bot_main

app = Flask(__name__)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–æ—Ç–∞
bot_running = False
bot_thread = None

def run_bot():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    global bot_running
    try:
        bot_running = True
        logger.info("–ó–∞–ø—É—Å–∫ VK –±–æ—Ç–∞...")
        bot_main()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞: {e}")
    finally:
        bot_running = False

@app.route('/')
def health_check():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞"""
    status = "üü¢ –†–∞–±–æ—Ç–∞–µ—Ç" if bot_running else "üî¥ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    thread_status = "üü¢ –ê–∫—Ç–∏–≤–µ–Ω" if bot_thread and bot_thread.is_alive() else "üî¥ –ù–µ–∞–∫—Ç–∏–≤–µ–Ω"
    
    html = f"""
    <!DOCTYPE html>
    <html>
    <head>
        <title>VK Bot Status</title>
        <meta charset="utf-8">
        <style>
            body {{ font-family: Arial, sans-serif; margin: 40px; }}
            .status {{ padding: 10px; margin: 10px 0; border-radius: 5px; }}
            .running {{ background-color: #d4edda; color: #155724; }}
            .stopped {{ background-color: #f8d7da; color: #721c24; }}
        </style>
    </head>
    <body>
        <h1>ü§ñ VK Bot Status</h1>
        <div class="status {'running' if bot_running else 'stopped'}">
            <strong>–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:</strong> {status}
        </div>
        <div class="status {'running' if bot_thread and bot_thread.is_alive() else 'stopped'}">
            <strong>–ü–æ—Ç–æ–∫ –±–æ—Ç–∞:</strong> {thread_status}
        </div>
        <p><strong>–ü–æ—Ä—Ç:</strong> {os.environ.get('PORT', '5000')}</p>
        <p><strong>–í—Ä–µ–º—è:</strong> {time.strftime('%Y-%m-%d %H:%M:%S')}</p>
        <p><a href="/status">JSON —Å—Ç–∞—Ç—É—Å</a> | <a href="/start">–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞</a></p>
    </body>
    </html>
    """
    return html

@app.route('/start')
def start_bot():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    global bot_thread, bot_running
    
    if bot_running:
        return jsonify({"status": "error", "message": "–ë–æ—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω"})
    
    try:
        bot_thread = threading.Thread(target=run_bot, daemon=True)
        bot_thread.start()
        return jsonify({"status": "success", "message": "–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω"})
    except Exception as e:
        return jsonify({"status": "error", "message": f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}"})

@app.route('/status')
def bot_status():
    """–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞ –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ"""
    return jsonify({
        "status": "healthy",
        "bot_running": bot_running,
        "thread_alive": bot_thread.is_alive() if bot_thread else False,
        "port": os.environ.get('PORT', '5000'),
        "timestamp": time.time()
    })

if __name__ == '__main__':
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    bot_thread = threading.Thread(target=run_bot, daemon=True)
    bot_thread.start()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask —Å–µ—Ä–≤–µ—Ä
    port = int(os.environ.get('PORT', 5000))
    logger.info(f"–ó–∞–ø—É—Å–∫ Flask —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É {port}")
    app.run(host='0.0.0.0', port=port, debug=False) 